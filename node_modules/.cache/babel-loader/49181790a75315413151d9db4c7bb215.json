{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-recipes-app/src/Components/StartRecipeBtn.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nconst START_RECIPE_BTN = 'start-recipe-btn';\n\nfunction StartRecipeBtn({\n  id,\n  type\n}) {\n  const [done, setDone] = useState(false);\n  const [doing, setDoing] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    if (!localStorage.getItem('doneRecipes')) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n\n    const alreadyDone = [...JSON.parse(localStorage.getItem('doneRecipes'))];\n    if (alreadyDone.some(e => e.id === id.toString())) setDone(true);\n  }, [id]);\n  useEffect(() => {\n    if (!localStorage.getItem('inProgressRecipes')) {\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        cocktails: {},\n        meals: {}\n      }));\n    }\n\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const {\n      meals,\n      cocktails\n    } = recipesInProgress;\n    const mealKeys = meals ? Object.keys(meals) : [];\n    const cocktailsKeys = cocktails ? Object.keys(cocktails) : [];\n    const array = [...mealKeys, ...cocktailsKeys];\n    if (array.some(e => e.toString() === id.toString())) setDoing(true);\n  }, [id]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": START_RECIPE_BTN,\n    type: \"button\",\n    style: {\n      position: 'fixed',\n      bottom: '0px',\n      display: done ? 'none' : 'inline'\n    },\n    onClick: () => history.push(`/${type}/${id}/in-progress`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, doing ? 'Continuar Receita' : 'Iniciar Receita');\n}\n\nStartRecipeBtn.propTypes = {\n  id: PropTypes.shape({\n    toString: PropTypes.func\n  }),\n  type: PropTypes.string\n}.isRequired;\nexport default StartRecipeBtn;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-recipes-app/src/Components/StartRecipeBtn.jsx"],"names":["PropTypes","React","useState","useEffect","useHistory","START_RECIPE_BTN","StartRecipeBtn","id","type","done","setDone","doing","setDoing","history","localStorage","getItem","setItem","JSON","stringify","alreadyDone","parse","some","e","toString","cocktails","meals","recipesInProgress","mealKeys","Object","keys","cocktailsKeys","array","position","bottom","display","push","propTypes","shape","func","string","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\n\nconst START_RECIPE_BTN = 'start-recipe-btn';\n\nfunction StartRecipeBtn({ id, type }) {\n  const [done, setDone] = useState(false);\n  const [doing, setDoing] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!localStorage.getItem('doneRecipes')) {\n      localStorage.setItem('doneRecipes', JSON.stringify([]));\n    }\n    const alreadyDone = [...JSON.parse(localStorage.getItem('doneRecipes'))];\n    if (alreadyDone.some((e) => e.id === id.toString())) setDone(true);\n  }, [id]);\n\n  useEffect(() => {\n    if (!localStorage.getItem('inProgressRecipes')) {\n      localStorage.setItem('inProgressRecipes',\n        JSON.stringify({ cocktails: {}, meals: {} }));\n    }\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    const { meals, cocktails } = recipesInProgress;\n    const mealKeys = meals ? Object.keys(meals) : [];\n    const cocktailsKeys = cocktails ? Object.keys(cocktails) : [];\n    const array = [...mealKeys, ...cocktailsKeys];\n    if (array.some((e) => e.toString() === id.toString())) setDoing(true);\n  }, [id]);\n\n  return (\n    <button\n      data-testid={ START_RECIPE_BTN }\n      type=\"button\"\n      style={ {\n        position: 'fixed',\n        bottom: '0px',\n        display: done ? 'none' : 'inline',\n      } }\n      onClick={ () => history.push(`/${type}/${id}/in-progress`) }\n    >\n      { doing ? 'Continuar Receita' : 'Iniciar Receita' }\n    </button>\n  );\n}\n\nStartRecipeBtn.propTypes = {\n  id: PropTypes.shape({\n    toString: PropTypes.func,\n  }),\n  type: PropTypes.string,\n}.isRequired;\n\nexport default StartRecipeBtn;\n"]},"metadata":{},"sourceType":"module"}