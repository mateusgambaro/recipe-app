{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-recipes-app/src/Components/Header.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport profileIcon from \"../images/profileIcon.svg\";\nimport searchIcon from \"../images/searchIcon.svg\";\nimport { fetchFirstLetterAPI, fetchIngredientAPI, fetchNameAPI } from '../services/mealsAPI';\nimport { fetchDrinksIngredientAPI, fetchDrinksNameAPI, fetchDrinksFirstLetterAPI } from '../services/drinksAPI';\nimport { GET_JSON } from '../redux/actions';\n\nfunction Header({\n  title,\n  search,\n  meals\n}) {\n  const [searchInput, setSearchInput] = useState(false);\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const [radioValue, setRadioValue] = useState('');\n  const [results, setResults] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch({\n      type: GET_JSON,\n      payload: results\n    });\n  }, [results, dispatch]);\n\n  const lengthAllowed = () => {\n    if (results.meals.length === 1) {\n      history.push(`/comidas/${results.meals[0].idMeal}`);\n    }\n  };\n\n  async function handleClickMeals() {\n    switch (radioValue) {\n      case 'ingrediente':\n        setResults(await fetchIngredientAPI(searchInputValue));\n        setSearchInputValue('');\n        break;\n\n      case 'nome':\n        setResults(await fetchNameAPI(searchInputValue));\n        setSearchInputValue('');\n        break;\n\n      case 'primeira-letra':\n        if (searchInputValue.length > 1) {\n          global.alert('Sua busca deve conter somente 1 (um) caracter');\n          break;\n        }\n\n        setResults(await fetchFirstLetterAPI(searchInputValue));\n        setSearchInputValue('');\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  async function handleClickDrinks() {\n    switch (radioValue) {\n      case 'ingrediente':\n        setResults(await fetchDrinksIngredientAPI(searchInputValue));\n        setSearchInputValue('');\n        break;\n\n      case 'nome':\n        setResults(await fetchDrinksNameAPI(searchInputValue));\n        setSearchInputValue('');\n        break;\n\n      case 'primeira-letra':\n        if (searchInputValue.length > 1) {\n          global.alert('Sua busca deve conter somente 1 (um) caracter');\n          break;\n        }\n\n        setResults(await fetchDrinksFirstLetterAPI(searchInputValue));\n        setSearchInputValue('');\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const fetchButtonMeals = /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: handleClickMeals,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, \"Buscar\");\n  const fetchButtonDrinks = /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: handleClickDrinks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, \"Buscar\");\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/perfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"profile-top-btn\",\n    src: profileIcon,\n    alt: \"Profile Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, search && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setSearchInput(!searchInput),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"search-top-btn\",\n    src: searchIcon,\n    alt: \"search Button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, searchInput && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"search-input\",\n    name: \"searchInput\",\n    placeholder: \"Buscar Receita\",\n    value: searchInputValue,\n    onChange: ({\n      target\n    }) => setSearchInputValue(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingrediente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"ingrediente\",\n    \"data-testid\": \"ingredient-search-radio\",\n    name: \"search-radio\",\n    value: \"ingrediente\",\n    type: \"radio\",\n    onChange: ({\n      target\n    }) => setRadioValue(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), \"Ingrediente\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"nome\",\n    \"data-testid\": \"name-search-radio\",\n    name: \"search-radio\",\n    value: \"nome\",\n    type: \"radio\",\n    onChange: ({\n      target\n    }) => setRadioValue(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }), \"Nome\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"primeira-letra\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"primeira-letra\",\n    \"data-testid\": \"first-letter-search-radio\",\n    name: \"search-radio\",\n    value: \"primeira-letra\",\n    type: \"radio\",\n    onChange: ({\n      target\n    }) => setRadioValue(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }), \"Primeira Letra\")), meals ? fetchButtonMeals : fetchButtonDrinks);\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  search: PropTypes.bool,\n  meals: PropTypes.bool\n};\nHeader.defaultProps = {\n  title: '',\n  search: true,\n  meals: true\n};\nexport default Header;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-recipes-app/src/Components/Header.jsx"],"names":["React","useEffect","useState","Link","PropTypes","useDispatch","fetchFirstLetterAPI","fetchIngredientAPI","fetchNameAPI","fetchDrinksIngredientAPI","fetchDrinksNameAPI","fetchDrinksFirstLetterAPI","GET_JSON","Header","title","search","meals","searchInput","setSearchInput","searchInputValue","setSearchInputValue","radioValue","setRadioValue","results","setResults","dispatch","history","useHistory","type","payload","lengthAllowed","length","push","idMeal","handleClickMeals","global","alert","handleClickDrinks","fetchButtonMeals","fetchButtonDrinks","profileIcon","searchIcon","target","value","propTypes","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport { fetchFirstLetterAPI, fetchIngredientAPI,\n  fetchNameAPI } from '../services/mealsAPI';\nimport {\n  fetchDrinksIngredientAPI,\n  fetchDrinksNameAPI,\n  fetchDrinksFirstLetterAPI,\n} from '../services/drinksAPI';\nimport { GET_JSON } from '../redux/actions';\n\nfunction Header({ title, search, meals }) {\n  const [searchInput, setSearchInput] = useState(false);\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const [radioValue, setRadioValue] = useState('');\n  const [results, setResults] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  useEffect(() => {\n    dispatch({ type: GET_JSON, payload: results });\n  }, [results, dispatch]);\n\n  const lengthAllowed = () => {\n    if (results.meals.length === 1) {\n      history.push(`/comidas/${results.meals[0].idMeal}`);\n    }\n  }\n\n  async function handleClickMeals() {\n    switch (radioValue) {\n    case 'ingrediente':\n      setResults(await fetchIngredientAPI(searchInputValue));\n      setSearchInputValue('');\n      \n      break;\n    case 'nome':\n      setResults(await fetchNameAPI(searchInputValue));\n      setSearchInputValue('');\n      break;\n    case 'primeira-letra':\n      if (searchInputValue.length > 1) {\n        global.alert('Sua busca deve conter somente 1 (um) caracter');\n        break;\n      }\n      setResults(await fetchFirstLetterAPI(searchInputValue));\n      setSearchInputValue('');\n      break;\n    default:\n      break;\n    }\n  }\n\n  async function handleClickDrinks() {\n    switch (radioValue) {\n    case 'ingrediente':\n      setResults(await fetchDrinksIngredientAPI(searchInputValue));\n      setSearchInputValue('');\n      break;\n    case 'nome':\n      setResults(await fetchDrinksNameAPI(searchInputValue));\n      setSearchInputValue('');\n      break;\n    case 'primeira-letra':\n      if (searchInputValue.length > 1) {\n        global.alert('Sua busca deve conter somente 1 (um) caracter');\n        break;\n      }\n      setResults(await fetchDrinksFirstLetterAPI(searchInputValue));\n      setSearchInputValue('');\n      break;\n    default:\n      break;\n    }\n  }\n\n  const fetchButtonMeals = (\n    <button\n      type=\"button\"\n      data-testid=\"exec-search-btn\"\n      onClick={ handleClickMeals }\n    >\n      Buscar\n    </button>);\n\n  const fetchButtonDrinks = (\n    <button\n      type=\"button\"\n      data-testid=\"exec-search-btn\"\n      onClick={ handleClickDrinks }\n    >\n      Buscar\n    </button>);\n\n  return (\n\n    <header className=\"header-container\">\n      <div>\n        <Link to=\"/perfil\">\n          <img\n            data-testid=\"profile-top-btn\"\n            src={ profileIcon }\n            alt=\"Profile Icon\"\n          />\n        </Link>\n      </div>\n      <div>\n        <h1 data-testid=\"page-title\">{title}</h1>\n      </div>\n\n      <div>\n        {search && (\n          <button type=\"button\" onClick={ () => setSearchInput(!searchInput) }>\n            <img\n              data-testid=\"search-top-btn\"\n              src={ searchIcon }\n              alt=\"search Button\"\n            />\n          </button>\n        )}\n      </div>\n      <div>\n        {searchInput && (\n          <input\n            type=\"text\"\n            data-testid=\"search-input\"\n            name=\"searchInput\"\n            placeholder=\"Buscar Receita\"\n            value={ searchInputValue }\n            onChange={ ({ target }) => setSearchInputValue(target.value) }\n          />\n        )}\n      </div>\n      <div>\n        <label htmlFor=\"ingrediente\">\n          <input\n            id=\"ingrediente\"\n            data-testid=\"ingredient-search-radio\"\n            name=\"search-radio\"\n            value=\"ingrediente\"\n            type=\"radio\"\n            onChange={ ({ target }) => setRadioValue(target.value) }\n          />\n          Ingrediente\n        </label>\n        <label htmlFor=\"nome\">\n          <input\n            id=\"nome\"\n            data-testid=\"name-search-radio\"\n            name=\"search-radio\"\n            value=\"nome\"\n            type=\"radio\"\n            onChange={ ({ target }) => setRadioValue(target.value) }\n          />\n          Nome\n        </label>\n        <label htmlFor=\"primeira-letra\">\n          <input\n            id=\"primeira-letra\"\n            data-testid=\"first-letter-search-radio\"\n            name=\"search-radio\"\n            value=\"primeira-letra\"\n            type=\"radio\"\n            onChange={ ({ target }) => setRadioValue(target.value) }\n          />\n          Primeira Letra\n        </label>\n      </div>\n      { meals ? fetchButtonMeals : fetchButtonDrinks }\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n  search: PropTypes.bool,\n  meals: PropTypes.bool,\n};\n\nHeader.defaultProps = {\n  title: '',\n  search: true,\n  meals: true,\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}