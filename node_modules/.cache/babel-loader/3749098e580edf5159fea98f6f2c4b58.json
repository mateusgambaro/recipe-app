{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-recipes-app/src/Components/DoneRecipesCard.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport '../styles/doneRecipes.css';\n\nconst copy = require('clipboard-copy');\n\nfunction DoneRecipesCard({\n  recipe: {\n    id,\n    name,\n    image,\n    category,\n    tags,\n    doneDate,\n    area,\n    alcoholicOrNot,\n    type\n  },\n  index\n}) {\n  const [alert, setAlert] = useState('');\n  const mealInfo = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, `${area} - ${category}`), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, tags.map((tag, idx) => /*#__PURE__*/React.createElement(\"p\", {\n    className: \"category\",\n    key: idx,\n    \"data-testid\": `${index}-${tag}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, tag))));\n\n  function handleClick() {\n    setAlert('Link copiado!');\n    return copy(type === 'comida' ? `http://localhost:3000/comidas/${id}` : `http://localhost:3000/bebidas/${id}`);\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"done-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"link-recipe\",\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-image`,\n    src: image,\n    alt: name,\n    width: \"200\",\n    height: \"200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"\",\n    src: shareIcon,\n    alt: \"Share\",\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), alert, type === 'comida' ? mealInfo : /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, alcoholicOrNot), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, doneDate));\n}\n\nDoneRecipesCard.propTypes = {\n  recipe: PropTypes.arrayOf(PropTypes.any).isRequired,\n  category: PropTypes.string,\n  doneDate: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.any).isRequired,\n  area: PropTypes.string,\n  alcoholicOrNot: PropTypes.string,\n  type: PropTypes.string.isRequired\n};\nDoneRecipesCard.defaultProps = {\n  alcoholicOrNot: '',\n  area: '',\n  category: ''\n};\nexport default DoneRecipesCard;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-recipes-app/src/Components/DoneRecipesCard.jsx"],"names":["PropTypes","React","useState","Link","copy","require","DoneRecipesCard","recipe","id","name","image","category","tags","doneDate","area","alcoholicOrNot","type","index","alert","setAlert","mealInfo","map","tag","idx","handleClick","shareIcon","propTypes","arrayOf","any","isRequired","string","number","defaultProps"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport '../styles/doneRecipes.css';\n\nconst copy = require('clipboard-copy');\n\nfunction DoneRecipesCard({ recipe: {\n  id,\n  name,\n  image,\n  category,\n  tags,\n  doneDate,\n  area,\n  alcoholicOrNot,\n  type,\n}, index }) {\n  const [alert, setAlert] = useState('');\n\n  const mealInfo = (\n    <div>\n      <h1 data-testid={ `${index}-horizontal-top-text` }>{ `${area} - ${category}` }</h1>\n      <div>\n        { tags.map((tag, idx) => (\n          <p\n            className=\"category\"\n            key={ idx }\n            data-testid={ `${index}-${tag}-horizontal-tag` }\n          >\n            { tag }\n          </p>\n        )) }\n      </div>\n    </div>\n  );\n\n  function handleClick() {\n    setAlert('Link copiado!');\n    return (\n      copy(type === 'comida'\n        ? `http://localhost:3000/comidas/${id}`\n        : `http://localhost:3000/bebidas/${id}`)\n    );\n  }\n\n  return (\n    <section className=\"done-card\">\n      <Link className=\"link-recipe\" to={ `/${type}s/${id}` }>\n        <img\n          data-testid={ `${index}-horizontal-image` }\n          src={ image }\n          alt={ name }\n          width=\"200\"\n          height=\"200\"\n        />\n        <p data-testid={ `${index}-horizontal-name` }>{ name }</p>\n      </Link>\n      <button\n        type=\"button\"\n        onClick={ handleClick }\n      >\n        <img\n          className=\"\"\n          src={ shareIcon }\n          alt=\"Share\"\n          data-testid={ `${index}-horizontal-share-btn` }\n        />\n      </button>\n      {alert}\n      { type === 'comida'\n        ? mealInfo\n        : <p data-testid={ `${index}-horizontal-top-text` }>{ alcoholicOrNot }</p> }\n      <p data-testid={ `${index}-horizontal-done-date` }>{ doneDate }</p>\n    </section>\n  );\n}\n\nDoneRecipesCard.propTypes = {\n  recipe: PropTypes.arrayOf(PropTypes.any).isRequired,\n  category: PropTypes.string,\n  doneDate: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(PropTypes.any).isRequired,\n  area: PropTypes.string,\n  alcoholicOrNot: PropTypes.string,\n  type: PropTypes.string.isRequired,\n};\n\nDoneRecipesCard.defaultProps = {\n  alcoholicOrNot: '',\n  area: '',\n  category: '',\n};\n\nexport default DoneRecipesCard;\n"]},"metadata":{},"sourceType":"module"}