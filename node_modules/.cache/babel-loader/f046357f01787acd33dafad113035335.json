{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-recipes-app/src/Components/CategoryButtons.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getResults, isCategoryClicked, isClicked, setCategory } from '../redux/actions';\nimport { fetchDrinksNameAPI } from '../services/drinksAPI';\nimport { fetchNameAPI } from '../services/mealsAPI';\nimport '../styles';\nconst FIVE = 5;\n\nasync function getMealsCategories() {\n  const fetchApi = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n  const parseApi = await fetchApi.json();\n  return parseApi;\n}\n\nasync function getDrinksCategories() {\n  const fetchApi = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n  const parseApi = await fetchApi.json();\n  return parseApi;\n}\n\nfunction getValues(categories) {\n  return categories.reduce((acc, cat) => [...acc, cat.strCategory], []);\n}\n\nclass CategoryButtons extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: []\n    };\n    this.parsedMealsCategories = this.parsedMealsCategories.bind(this);\n    this.parsedDrinksCategories = this.parsedDrinksCategories.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n    this.filterByAll = this.filterByAll.bind(this);\n  }\n\n  async componentDidMount() {\n    const {\n      meal\n    } = this.props;\n\n    if (meal === true) {\n      await this.parsedMealsCategories();\n    } else {\n      await this.parsedDrinksCategories();\n    }\n  }\n\n  async parsedMealsCategories() {\n    const mealsCategories = await getMealsCategories();\n    const allCategories = getValues(mealsCategories.meals);\n    this.setState({\n      categories: allCategories.slice(0, FIVE)\n    });\n  }\n\n  async parsedDrinksCategories() {\n    const drinksCategories = await getDrinksCategories();\n    const allCategories = getValues(drinksCategories.drinks);\n    this.setState({\n      categories: allCategories.slice(0, FIVE)\n    });\n  }\n\n  async filterByCategory(category) {\n    const {\n      categoriesToGlobalState,\n      categoryFromGlobal,\n      dispatchCategory,\n      click,\n      meal,\n      isCategoryFromGlobal,\n      categoryClicked\n    } = this.props;\n\n    if (category === categoryFromGlobal) {\n      categoryClicked(!isCategoryFromGlobal);\n    }\n\n    dispatchCategory(category);\n    click(false);\n\n    if (meal) {\n      const mealsCategories = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n      const parsedApi = await mealsCategories.json();\n      categoriesToGlobalState(parsedApi);\n    } else {\n      const drinksCategories = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n      const parsedApi = await drinksCategories.json();\n      categoriesToGlobalState(parsedApi);\n    }\n  }\n\n  async filterByAll() {\n    const {\n      categoriesToGlobalState,\n      meal,\n      click\n    } = this.props;\n    click(false);\n\n    if (meal) {\n      const allMealsCategories = await fetchNameAPI('');\n      categoriesToGlobalState(allMealsCategories);\n    } else {\n      const allDrinksCategories = await fetchDrinksNameAPI('');\n      categoriesToGlobalState(allDrinksCategories);\n    }\n  }\n\n  render() {\n    const {\n      categories\n    } = this.state;\n    return categories.length !== 0 ? /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"All-category-filter\",\n      onClick: this.filterByAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"All\"), categories.map((category, i) => /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": `${category}-category-filter`,\n      key: i,\n      onClick: () => this.filterByCategory(`${category}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, category))) : 'loading';\n  }\n\n}\n\nCategoryButtons.propTypes = {\n  meal: PropTypes.bool.isRequired,\n  categoriesToGlobalState: PropTypes.func.isRequired,\n  click: PropTypes.func.isRequired,\n  isCategoryFromGlobal: PropTypes.bool.isRequired,\n  categoryClicked: PropTypes.func.isRequired,\n  categoryFromGlobal: PropTypes.string.isRequired,\n  dispatchCategory: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  categoriesToGlobalState: Results => dispatch(getResults(Results)),\n  click: bool => dispatch(isClicked(bool)),\n  categoryClicked: negation => dispatch(isCategoryClicked(negation)),\n  dispatchCategory: cat => dispatch(setCategory(cat))\n});\n\nconst mapStateToProps = state => ({\n  isCategoryFromGlobal: state.searchReducer.isCategoryClicked,\n  categoryFromGlobal: state.searchReducer.category\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryButtons);","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-recipes-app/src/Components/CategoryButtons.jsx"],"names":["PropTypes","React","Component","connect","getResults","isCategoryClicked","isClicked","setCategory","fetchDrinksNameAPI","fetchNameAPI","FIVE","getMealsCategories","fetchApi","fetch","parseApi","json","getDrinksCategories","getValues","categories","reduce","acc","cat","strCategory","CategoryButtons","constructor","state","parsedMealsCategories","bind","parsedDrinksCategories","filterByCategory","filterByAll","componentDidMount","meal","props","mealsCategories","allCategories","meals","setState","slice","drinksCategories","drinks","category","categoriesToGlobalState","categoryFromGlobal","dispatchCategory","click","isCategoryFromGlobal","categoryClicked","parsedApi","allMealsCategories","allDrinksCategories","render","length","map","i","propTypes","bool","isRequired","func","string","mapDispatchToProps","dispatch","Results","negation","mapStateToProps","searchReducer"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getResults, isCategoryClicked, isClicked, setCategory } from '../redux/actions';\nimport { fetchDrinksNameAPI } from '../services/drinksAPI';\nimport { fetchNameAPI } from '../services/mealsAPI';\nimport '../styles'\n\nconst FIVE = 5;\n\nasync function getMealsCategories() {\n  const fetchApi = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n  const parseApi = await fetchApi.json();\n  return parseApi;\n}\n\nasync function getDrinksCategories() {\n  const fetchApi = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n  const parseApi = await fetchApi.json();\n  return parseApi;\n}\n\nfunction getValues(categories) {\n  return categories.reduce((acc, cat) => [...acc, cat.strCategory], []);\n}\n\nclass CategoryButtons extends Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: [],\n    };\n    this.parsedMealsCategories = this.parsedMealsCategories.bind(this);\n    this.parsedDrinksCategories = this.parsedDrinksCategories.bind(this);\n    this.filterByCategory = this.filterByCategory.bind(this);\n    this.filterByAll = this.filterByAll.bind(this);\n  }\n\n  async componentDidMount() {\n    const { meal } = this.props;\n    if (meal === true) {\n      await this.parsedMealsCategories();\n    } else {\n      await this.parsedDrinksCategories();\n    }\n  }\n\n  async parsedMealsCategories() {\n    const mealsCategories = await getMealsCategories();\n    const allCategories = getValues(mealsCategories.meals);\n    this.setState({ categories: allCategories.slice(0, FIVE) });\n  }\n\n  async parsedDrinksCategories() {\n    const drinksCategories = await getDrinksCategories();\n    const allCategories = getValues(drinksCategories.drinks);\n    this.setState({ categories: allCategories.slice(0, FIVE) });\n  }\n\n  async filterByCategory(category) {\n    const { categoriesToGlobalState, categoryFromGlobal, dispatchCategory,\n      click, meal, isCategoryFromGlobal, categoryClicked } = this.props;\n    if (category === categoryFromGlobal) {\n      categoryClicked(!isCategoryFromGlobal);\n    }\n    dispatchCategory(category);\n    click(false);\n    if (meal) {\n      const mealsCategories = await\n      fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`);\n      const parsedApi = await mealsCategories.json();\n      categoriesToGlobalState(parsedApi);\n    } else {\n      const drinksCategories = await\n      fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`);\n      const parsedApi = await drinksCategories.json();\n      categoriesToGlobalState(parsedApi);\n    }\n  }\n\n  async filterByAll() {\n    const { categoriesToGlobalState, meal, click } = this.props;\n    click(false);\n    if (meal) {\n      const allMealsCategories = await fetchNameAPI('');\n      categoriesToGlobalState(allMealsCategories);\n    } else {\n      const allDrinksCategories = await fetchDrinksNameAPI('');\n      categoriesToGlobalState(allDrinksCategories);\n    }\n  }\n\n  render() {\n    const { categories } = this.state;\n    return (\n\n      categories.length !== 0\n        ? (\n          <section>\n            <button\n              type=\"button\"\n              data-testid=\"All-category-filter\"\n              onClick={ this.filterByAll }\n            >\n              All\n            </button>\n            { categories.map((category, i) => (\n              <button\n                type=\"button\"\n                data-testid={ `${category}-category-filter` }\n                key={ i }\n                onClick={ () => this.filterByCategory(`${category}`) }\n              >\n                {category}\n              </button>\n            )) }\n          </section>\n        )\n        : 'loading'\n    );\n  }\n}\n\nCategoryButtons.propTypes = {\n  meal: PropTypes.bool.isRequired,\n  categoriesToGlobalState: PropTypes.func.isRequired,\n  click: PropTypes.func.isRequired,\n  isCategoryFromGlobal: PropTypes.bool.isRequired,\n  categoryClicked: PropTypes.func.isRequired,\n  categoryFromGlobal: PropTypes.string.isRequired,\n  dispatchCategory: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  categoriesToGlobalState: (Results) => dispatch(getResults(Results)),\n  click: (bool) => dispatch(isClicked(bool)),\n  categoryClicked: (negation) => dispatch(isCategoryClicked(negation)),\n  dispatchCategory: (cat) => dispatch(setCategory(cat)),\n});\n\nconst mapStateToProps = (state) => ({\n  isCategoryFromGlobal: state.searchReducer.isCategoryClicked,\n  categoryFromGlobal: state.searchReducer.category,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryButtons);\n"]},"metadata":{},"sourceType":"module"}