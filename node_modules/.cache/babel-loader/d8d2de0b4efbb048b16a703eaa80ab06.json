{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-recipes-app/src/pages/MealsDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/recipesDetails.css';\nconst RECIPE_PHOTO = 'recipe-photo';\nconst RECIPE_TITLE = 'recipe-title';\nconst SHARE_BTN = 'share-btn';\nconst FAVORITE_BTN = 'favorite-btn';\nconst RECIPE_CATEGORY = 'recipe-category';\n\nconst INGREDIENT_NAME_AND_MEASURE = index => `${index}-ingredient-name-and-measure`;\n\nconst INSTRUCTIONS = 'instructions';\nconst VIDEO = 'video';\nconst START_RECIPE_BTN = 'start-recipe-btn'; // Habilitar após criação do card de Receita;\n// const RECOMENDATION_CARD = (index) => `${index}-recomendation-card`;\n\nconst randomEndpoint = 'https://www.themealdb.com/api/json/v1/1/random.php';\n\nconst idEndpoint = id => `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n\nfunction MealsDetails({\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  const [recipe, setRecipe] = useState([]);\n\n  const getRecipe = async () => {\n    await fetch(idEndpoint(id)).then(response => response.json()).then(data => setRecipe(data.meals[0]));\n  };\n\n  const getRandom = async () => {\n    await fetch(randomEndpoint).then(response => response.json()).then(data => setRecipe(data.meals[0]));\n  };\n\n  useEffect(() => {\n    if (id === 'random') {\n      getRandom();\n    } else {\n      getRecipe();\n    }\n  });\n  const {\n    strMealThumb,\n    strMeal,\n    strCategory,\n    strInstructions,\n    strYoutube\n  } = recipe;\n\n  function embed(str) {\n    const array = typeof str === 'string' ? str.split('=') : '';\n    const prefix = 'https://www.youtube.com/embed/';\n    return prefix.concat(array[1]);\n  }\n\n  function returnValue(a, b, string) {\n    if (a.toLowerCase().includes(string) && b !== '') {\n      return b;\n    }\n\n    return undefined;\n  }\n\n  const entries = Object.entries(recipe);\n  const ingredients = entries.map(e => returnValue(e[0], e[1], 'ingredient')).filter(e => e !== undefined);\n  const measurements = entries.map(e => returnValue(e[0], e[1], 'measure')).filter(e => e !== undefined);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"recipe-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": RECIPE_PHOTO,\n    alt: `${strMeal} dish`,\n    src: strMealThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Detalhes\"), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": RECIPE_TITLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, strMeal), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": SHARE_BTN,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Compartilhar\"), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": FAVORITE_BTN,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Favorito\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"category\",\n    \"data-testid\": RECIPE_CATEGORY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, strCategory), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, ingredients.map((e, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    \"data-testid\": INGREDIENT_NAME_AND_MEASURE(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, `${e} - ${measurements[index]}`))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"method\",\n    \"data-testid\": INSTRUCTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(\"iframe\", {\n    className: \"videobox\",\n    width: \"560\",\n    height: \"315\",\n    \"data-testid\": VIDEO,\n    src: embed(strYoutube),\n    title: \"YouTube video player\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start\",\n    \"data-testid\": START_RECIPE_BTN,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Iniciar Receita\"));\n}\n\nMealsDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  })\n};\nMealsDetails.defaultProps = {\n  match: {}\n};\nexport default MealsDetails;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-recipes-app/src/pages/MealsDetails.js"],"names":["React","useState","useEffect","PropTypes","RECIPE_PHOTO","RECIPE_TITLE","SHARE_BTN","FAVORITE_BTN","RECIPE_CATEGORY","INGREDIENT_NAME_AND_MEASURE","index","INSTRUCTIONS","VIDEO","START_RECIPE_BTN","randomEndpoint","idEndpoint","id","MealsDetails","match","params","recipe","setRecipe","getRecipe","fetch","then","response","json","data","meals","getRandom","strMealThumb","strMeal","strCategory","strInstructions","strYoutube","embed","str","array","split","prefix","concat","returnValue","a","b","string","toLowerCase","includes","undefined","entries","Object","ingredients","map","e","filter","measurements","propTypes","shape","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/recipesDetails.css';\n\nconst RECIPE_PHOTO = 'recipe-photo';\nconst RECIPE_TITLE = 'recipe-title';\nconst SHARE_BTN = 'share-btn';\nconst FAVORITE_BTN = 'favorite-btn';\nconst RECIPE_CATEGORY = 'recipe-category';\nconst INGREDIENT_NAME_AND_MEASURE = (index) => `${index}-ingredient-name-and-measure`;\nconst INSTRUCTIONS = 'instructions';\nconst VIDEO = 'video';\nconst START_RECIPE_BTN = 'start-recipe-btn';\n// Habilitar após criação do card de Receita;\n// const RECOMENDATION_CARD = (index) => `${index}-recomendation-card`;\nconst randomEndpoint = 'https://www.themealdb.com/api/json/v1/1/random.php';\nconst idEndpoint = (id) => `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`;\n\nfunction MealsDetails({ match: { params: { id } } }) {\n  const [recipe, setRecipe] = useState([]);\n  const getRecipe = async () => {\n    await fetch(idEndpoint(id))\n      .then((response) => response.json())\n      .then((data) => setRecipe(data.meals[0]));\n  };\n\n  const getRandom = async () => {\n    await fetch(randomEndpoint)\n      .then((response) => response.json())\n      .then((data) => setRecipe(data.meals[0]));\n  };\n\n  useEffect(() => {\n    if (id === 'random') {\n      getRandom();\n    } else {\n      getRecipe();\n    }\n  });\n\n  const { strMealThumb, strMeal, strCategory, strInstructions, strYoutube } = recipe;\n\n  function embed(str) {\n    const array = typeof (str) === 'string' ? str.split('=') : '';\n    const prefix = 'https://www.youtube.com/embed/';\n    return prefix.concat(array[1]);\n  }\n\n  function returnValue(a, b, string) {\n    if (a.toLowerCase().includes(string) && b !== '') {\n      return b;\n    }\n    return undefined;\n  }\n\n  const entries = Object.entries(recipe);\n  const ingredients = entries.map((e) => returnValue(e[0], e[1], 'ingredient'))\n    .filter((e) => e !== undefined);\n  const measurements = entries.map((e) => returnValue(e[0], e[1], 'measure'))\n    .filter((e) => e !== undefined);\n\n  return (\n    <section className=\"recipe-card\">\n      <img data-testid={ RECIPE_PHOTO } alt={ `${strMeal} dish` } src={ strMealThumb } />\n      <h1>Detalhes</h1>\n      <h2 data-testid={ RECIPE_TITLE }>{strMeal}</h2>\n      <div className=\"buttons\">\n        <button data-testid={ SHARE_BTN } type=\"button\">\n          Compartilhar\n        </button>\n        <button data-testid={ FAVORITE_BTN } type=\"button\">\n          Favorito\n        </button>\n      </div>\n      <p className=\"category\" data-testid={ RECIPE_CATEGORY }>{strCategory}</p>\n      <ul>\n        { ingredients.map((e, index) => (\n          <li key={ index } data-testid={ INGREDIENT_NAME_AND_MEASURE(index) }>\n            {`${e} - ${measurements[index]}`}\n          </li>\n        ))}\n      </ul>\n      <p className=\"method\" data-testid={ INSTRUCTIONS }>{strInstructions}</p>\n      <iframe\n        className=\"videobox\"\n        width=\"560\"\n        height=\"315\"\n        data-testid={ VIDEO }\n        src={ embed(strYoutube) }\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        allow=\"accelerometer;\n        autoplay;\n        clipboard-write;\n        encrypted-media;\n        gyroscope;\n        picture-in-picture\"\n        allowFullScreen\n      />\n      {/* Desabilitado, função necessita do Card de receita\n      {\n        recommended.map((e, index) => {<RecipeCard key={index} data-testid={ RECOMENDATION_CARD(index) } >{e}</RecipeCard>})\n      }\n      */}\n      <button className=\"start\"data-testid={ START_RECIPE_BTN } type=\"button\">\n        Iniciar Receita\n      </button>\n    </section>\n  );\n}\n\nMealsDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }),\n};\n\nMealsDetails.defaultProps = {\n  match: {},\n};\n\nexport default MealsDetails;\n"]},"metadata":{},"sourceType":"module"}