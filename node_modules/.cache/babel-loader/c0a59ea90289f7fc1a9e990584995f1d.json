{"ast":null,"code":"var _jsxFileName = \"/home/mateus/projetos_trybe/sd-014-b-project-recipes-app/src/Components/CheckboxIngrendient.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst INGREDIENT_STEP = index => `${index}-ingredient-step`;\n\nfunction CheckboxIngredient(props) {\n  const {\n    index,\n    ingredient,\n    measure\n  } = props;\n  const [checked, setChecked] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    \"data-testid\": INGREDIENT_STEP(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textDecoration: checked ? 'line-through' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, `${ingredient} - ${measure}`), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => setChecked(!checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }));\n}\n\nCheckboxIngredient.propTypes = {\n  index: PropTypes.number,\n  ingredient: PropTypes.string,\n  measure: PropTypes.string\n}.isRequired;\nexport default CheckboxIngredient;","map":{"version":3,"sources":["/home/mateus/projetos_trybe/sd-014-b-project-recipes-app/src/Components/CheckboxIngrendient.jsx"],"names":["PropTypes","React","useState","INGREDIENT_STEP","index","CheckboxIngredient","props","ingredient","measure","checked","setChecked","textDecoration","propTypes","number","string","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAY,GAAEA,KAAM,kBAA5C;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAM;AAAEF,IAAAA,KAAF;AAASG,IAAAA,UAAT;AAAqBC,IAAAA;AAArB,MAAiCF,KAAvC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,sBACE;AAAK,IAAA,GAAG,EAAGE,KAAX;AAAmB,mBAAcD,eAAe,CAACC,KAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,KAAK,EAAG;AAAEO,MAAAA,cAAc,EAAEF,OAAO,GAAG,cAAH,GAAoB;AAA7C,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAEF,UAAW,MAAKC,OAAQ,EAD9B,CADF,eAIE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,QAAQ,EAAG,MAAME,UAAU,CAAC,CAACD,OAAF,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAWD;;AACDJ,kBAAkB,CAACO,SAAnB,GAA+B;AAC7BR,EAAAA,KAAK,EAAEJ,SAAS,CAACa,MADY;AAE7BN,EAAAA,UAAU,EAAEP,SAAS,CAACc,MAFO;AAG7BN,EAAAA,OAAO,EAAER,SAAS,CAACc;AAHU,EAI7BC,UAJF;AAKA,eAAeV,kBAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst INGREDIENT_STEP = (index) => `${index}-ingredient-step`;\nfunction CheckboxIngredient(props) {\n  const { index, ingredient, measure } = props;\n  const [checked, setChecked] = useState(false);\n  return (\n    <div key={ index } data-testid={ INGREDIENT_STEP(index) }>\n      <p style={ { textDecoration: checked ? 'line-through' : 'none' } }>\n        {`${ingredient} - ${measure}`}\n      </p>\n      <input\n        type=\"checkbox\"\n        onChange={ () => setChecked(!checked) }\n      />\n    </div>\n  );\n}\nCheckboxIngredient.propTypes = {\n  index: PropTypes.number,\n  ingredient: PropTypes.string,\n  measure: PropTypes.string,\n}.isRequired;\nexport default CheckboxIngredient;\n"]},"metadata":{},"sourceType":"module"}