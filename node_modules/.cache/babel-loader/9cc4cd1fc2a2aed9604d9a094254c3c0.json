{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-recipes-app/src/pages/Meals.js\";\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport Footer from '../Components/Footer';\nimport { fetchNameAPI } from '../services/mealsAPI';\nimport Header from '../Components/Header';\nimport SearchCard from '../Components/SearchCard';\nimport CategoryButtons from '../Components/CategoryButtons';\nconst TWELVE = 12;\n\nfunction Meals({\n  history\n}) {\n  const [mealSearch, setMealSearch] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [initialRecipes, setInitialRecipes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  const [isCatClicked, setIsCatClicked] = useState(false);\n  const resultsFromGlobalState = useSelector(state => state.searchReducer.results);\n  const isClickedFromGlobalState = useSelector(state => state.searchReducer.isClicked);\n  const isClickedFromGlobal = useSelector(state => state.searchReducer.isCategoryClicked);\n  useEffect(() => {\n    setIsCatClicked(isClickedFromGlobal);\n  }, [isClickedFromGlobal]);\n  useEffect(() => {\n    setIsFetched(false);\n\n    async function getInitialRecipes() {\n      const recipes = await fetchNameAPI('');\n      setInitialRecipes(recipes);\n      setIsFetched(true);\n    }\n\n    getInitialRecipes(); // setInitialRecipes()\n  }, []);\n  useEffect(() => {\n    setMealSearch(resultsFromGlobalState);\n    setSubmitted(true);\n  }, [resultsFromGlobalState]);\n  useEffect(() => {\n    if (submitted === true && mealSearch.meals && mealSearch.meals.length === 1 && isClicked) {\n      history.push(`/comidas/${mealSearch.meals[0].idMeal}`);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [mealSearch]);\n  useEffect(() => {\n    setIsClicked(isClickedFromGlobalState);\n  }, [isClickedFromGlobalState]);\n  return isFetched ? /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Comidas\",\n    search: true,\n    meals: true,\n    type: \"meals\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })) : '';\n}\n\nMeals.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default Meals;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-recipes-app/src/pages/Meals.js"],"names":["React","useEffect","useState","PropTypes","useSelector","Footer","fetchNameAPI","Header","SearchCard","CategoryButtons","TWELVE","Meals","history","mealSearch","setMealSearch","isFetched","setIsFetched","submitted","setSubmitted","initialRecipes","setInitialRecipes","isClicked","setIsClicked","isCatClicked","setIsCatClicked","resultsFromGlobalState","state","searchReducer","results","isClickedFromGlobalState","isClickedFromGlobal","isCategoryClicked","getInitialRecipes","recipes","meals","length","push","idMeal","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport Footer from '../Components/Footer';\nimport { fetchNameAPI } from '../services/mealsAPI';\nimport Header from '../Components/Header';\nimport SearchCard from '../Components/SearchCard';\nimport CategoryButtons from '../Components/CategoryButtons';\n\nconst TWELVE = 12;\n\nfunction Meals({ history }) {\n  const [mealSearch, setMealSearch] = useState([]);\n  const [isFetched, setIsFetched] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [initialRecipes, setInitialRecipes] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n  const [isCatClicked, setIsCatClicked] = useState(false);\n  const resultsFromGlobalState = useSelector((state) => (\n    state.searchReducer.results));\n  const isClickedFromGlobalState = useSelector((state) => (\n    state.searchReducer.isClicked));\n  const isClickedFromGlobal = useSelector((state) => (\n    state.searchReducer.isCategoryClicked));\n\n  useEffect(() => {\n    setIsCatClicked(isClickedFromGlobal);\n  }, [isClickedFromGlobal]);\n\n  useEffect(() => {\n    setIsFetched(false);\n    async function getInitialRecipes() {\n      const recipes = await fetchNameAPI('');\n      setInitialRecipes(recipes);\n      setIsFetched(true);\n    }\n    getInitialRecipes();\n    // setInitialRecipes()\n  }, []);\n\n  useEffect(() => {\n    setMealSearch(resultsFromGlobalState);\n    setSubmitted(true);\n  }, [resultsFromGlobalState]);\n\n  useEffect(() => {\n    if (submitted === true && mealSearch.meals && mealSearch.meals.length === 1\n      && isClicked) {\n      history.push(`/comidas/${mealSearch.meals[0].idMeal}`);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mealSearch]);\n\n  useEffect(() => {\n    setIsClicked(isClickedFromGlobalState);\n  }, [isClickedFromGlobalState]);\n\n  return (\n    isFetched ? (\n      <section>\n        <header>\n          <Header title=\"Comidas\" search meals type=\"meals\" />\n        </header>\n\n        <Footer />\n      </section>\n    ) : ''\n  );\n}\n\nMeals.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Meals;\n"]},"metadata":{},"sourceType":"module"}