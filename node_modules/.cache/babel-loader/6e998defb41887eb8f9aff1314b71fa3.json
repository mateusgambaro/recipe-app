{"ast":null,"code":"var _jsxFileName = \"/home/mateus/sd-014-b-project-recipes-app/src/pages/DrinkDetails.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/recipesDetails.css';\nimport LikeAndShare from '../Components/LikeAndShare';\nimport CarouselMeals from '../Components/CarouselMeals';\nimport StartRecipeBtn from '../Components/StartRecipeBtn';\nconst RECIPE_PHOTO = 'recipe-photo';\nconst RECIPE_TITLE = 'recipe-title';\nconst RECIPE_CATEGORY = 'recipe-category';\n\nconst INGREDIENT_NAME_AND_MEASURE = index => `${index}-ingredient-name-and-measure`;\n\nconst INSTRUCTIONS = 'instructions';\nconst randomEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\n\nconst idEndpoint = id => `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\n\nconst mealsEndpoint = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n\nfunction DrinkDetails({\n  match: {\n    params: {\n      id\n    }\n  }\n}) {\n  const [recipe, setRecipe] = useState([]);\n  const [dishes, setDishes] = useState([]);\n\n  const getDishes = async () => {\n    const {\n      meals\n    } = await fetch(mealsEndpoint).then(results => results.json());\n    setDishes(meals);\n  };\n\n  const getRecipe = async () => {\n    await fetch(idEndpoint(id)).then(response => response.json()).then(data => setRecipe(data.drinks[0]));\n  };\n\n  const getRandom = async () => {\n    await fetch(randomEndpoint).then(response => response.json()).then(data => setRecipe(data.drinks[0]));\n  };\n\n  useEffect(() => {\n    getDishes();\n  }, []);\n  useEffect(() => {\n    if (id === 'random') {\n      getRandom();\n    } else {\n      getRecipe();\n    }\n  });\n  const {\n    strDrinkThumb,\n    strDrink,\n    strAlcoholic,\n    strInstructions\n  } = recipe;\n\n  function returnValue(a, b, string) {\n    if (a.toLowerCase().includes(string) && b) {\n      return b;\n    }\n\n    return null;\n  }\n\n  const entries = Object.entries(recipe);\n  const ingredients = entries.map(e => returnValue(e[0], e[1], 'ingredient')).filter(e => e !== null);\n  const measurements = entries.map(e => returnValue(e[0], e[1], 'measure')).filter(e => e !== null);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"recipe-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": RECIPE_PHOTO,\n    alt: `${strDrink} drink`,\n    src: strDrinkThumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Detalhes\"), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": RECIPE_TITLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, strDrink), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": RECIPE_CATEGORY,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, strAlcoholic), /*#__PURE__*/React.createElement(LikeAndShare, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, ingredients.map((e, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    \"data-testid\": INGREDIENT_NAME_AND_MEASURE(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, `${e} - ${measurements[index]}`))), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": INSTRUCTIONS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, strInstructions), /*#__PURE__*/React.createElement(CarouselMeals, {\n    dishes: dishes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StartRecipeBtn, {\n    id: id,\n    type: \"bebidas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n}\n\nDrinkDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  })\n};\nDrinkDetails.defaultProps = {\n  match: {}\n};\nexport default DrinkDetails;","map":{"version":3,"sources":["/home/mateus/sd-014-b-project-recipes-app/src/pages/DrinkDetails.js"],"names":["React","useState","useEffect","PropTypes","LikeAndShare","CarouselMeals","StartRecipeBtn","RECIPE_PHOTO","RECIPE_TITLE","RECIPE_CATEGORY","INGREDIENT_NAME_AND_MEASURE","index","INSTRUCTIONS","randomEndpoint","idEndpoint","id","mealsEndpoint","DrinkDetails","match","params","recipe","setRecipe","dishes","setDishes","getDishes","meals","fetch","then","results","json","getRecipe","response","data","drinks","getRandom","strDrinkThumb","strDrink","strAlcoholic","strInstructions","returnValue","a","b","string","toLowerCase","includes","entries","Object","ingredients","map","e","filter","measurements","propTypes","shape","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/recipesDetails.css';\nimport LikeAndShare from '../Components/LikeAndShare';\nimport CarouselMeals from '../Components/CarouselMeals';\nimport StartRecipeBtn from '../Components/StartRecipeBtn';\n\nconst RECIPE_PHOTO = 'recipe-photo';\nconst RECIPE_TITLE = 'recipe-title';\nconst RECIPE_CATEGORY = 'recipe-category';\nconst INGREDIENT_NAME_AND_MEASURE = (index) => `${index}-ingredient-name-and-measure`;\nconst INSTRUCTIONS = 'instructions';\n\nconst randomEndpoint = 'https://www.thecocktaildb.com/api/json/v1/1/random.php';\nconst idEndpoint = (id) => `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`;\nconst mealsEndpoint = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n\nfunction DrinkDetails({ match: { params: { id } } }) {\n  const [recipe, setRecipe] = useState([]);\n  const [dishes, setDishes] = useState([]);\n\n  const getDishes = async () => {\n    const { meals } = await fetch(mealsEndpoint)\n      .then((results) => results.json());\n    setDishes(meals);\n  };\n\n  const getRecipe = async () => {\n    await fetch(idEndpoint(id))\n      .then((response) => response.json())\n      .then((data) => setRecipe(data.drinks[0]));\n  };\n\n  const getRandom = async () => {\n    await fetch(randomEndpoint)\n      .then((response) => response.json())\n      .then((data) => setRecipe(data.drinks[0]));\n  };\n\n  useEffect(() => { getDishes(); }, []);\n\n  useEffect(() => {\n    if (id === 'random') {\n      getRandom();\n    } else {\n      getRecipe();\n    }\n  });\n\n  const { strDrinkThumb, strDrink,\n    strAlcoholic, strInstructions } = recipe;\n\n  function returnValue(a, b, string) {\n    if (a.toLowerCase().includes(string) && b) {\n      return b;\n    }\n    return null;\n  }\n\n  const entries = Object.entries(recipe);\n  const ingredients = entries.map((e) => returnValue(e[0], e[1], 'ingredient'))\n    .filter((e) => e !== null);\n  const measurements = entries.map((e) => returnValue(e[0], e[1], 'measure'))\n    .filter((e) => e !== null);\n\n  return (\n    <section className=\"recipe-card\">\n      <img\n        data-testid={ RECIPE_PHOTO }\n        alt={ `${strDrink} drink` }\n        src={ strDrinkThumb }\n      />\n      <h1>Detalhes</h1>\n      <h2 data-testid={ RECIPE_TITLE }>{strDrink}</h2>\n      <p data-testid={ RECIPE_CATEGORY }>{strAlcoholic}</p>\n      <LikeAndShare id={ id } />\n      <ul>\n        { ingredients.map((e, index) => (\n          <li key={ index } data-testid={ INGREDIENT_NAME_AND_MEASURE(index) }>\n            {`${e} - ${measurements[index]}`}\n          </li>\n        ))}\n      </ul>\n      <p data-testid={ INSTRUCTIONS }>{strInstructions}</p>\n      <CarouselMeals dishes={ dishes } />\n      <StartRecipeBtn id={ id } type=\"bebidas\" />\n    </section>\n  );\n}\n\nDrinkDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }),\n};\n\nDrinkDetails.defaultProps = {\n  match: {},\n};\nexport default DrinkDetails;\n"]},"metadata":{},"sourceType":"module"}